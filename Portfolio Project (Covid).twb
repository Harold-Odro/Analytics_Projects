<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Tableau 1)' inline='true' name='federated.0t6pgvh0m6wwq9121ww38173bvb6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau 1' name='excel-direct.0s4f7as0d280tk17esuao0d6gwae'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Dell/Documents/Spreadsheets/Tableau 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0s4f7as0d280tk17esuao0d6gwae' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='Total_Cases' ordinal='0' />
            <column datatype='integer' name='Total_Deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Total_Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total_Cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total_Deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Dell/Documents/My Tableau Repository/Datasources/Sheet1 (Tableau 1).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='01/17/2024 04:49:07 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Sheet1 (Tableau 1)' increment-value='%null%' refresh-type='create' rows-inserted='1' timestamp-start='2024-01-17 16:49:07.196' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Total_Cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total_Cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total_Cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total_Deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total_Deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total_Deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.427143' measure-ordering='alphabetic' measure-percentage='0.572857' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ghana&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Sheet1 (Tableau 3)' inline='true' name='federated.0pr91at1w7vc471c66sf90zwejom' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau 3' name='excel-direct.13l08pv1aloor916vgr4404o9vk4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Dell/Documents/Spreadsheets/Tableau 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.13l08pv1aloor916vgr4404o9vk4' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PopulationInfectedPercentage' ordinal='3' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PopulationInfectedPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PopulationInfectedPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PopulationInfectedPercentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D256:no:A1:D256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Dell/Documents/My Tableau Repository/Datasources/Sheet1 (Tableau 3).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='01/17/2024 04:59:44 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Sheet1 (Tableau 3)' increment-value='%null%' refresh-type='create' rows-inserted='255' timestamp-start='2024-01-17 16:59:44.032' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>225</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PopulationInfectedPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PopulationInfectedPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PopulationInfectedPercentage</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>245</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.407143' measure-ordering='alphabetic' measure-percentage='0.592857' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ghana&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Sheet1 (Tableau 2)' inline='true' name='federated.0wep7o20jrs9nb10brb8i1i1frlp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau 2' name='excel-direct.10xxakd1hlmoq71f3fn4u0z384px'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Dell/Documents/Spreadsheets/Tableau 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.10xxakd1hlmoq71f3fn4u0z384px' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Dell/Documents/My Tableau Repository/Datasources/Sheet1 (Tableau 2).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='01/17/2024 04:59:59 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Sheet1 (Tableau 2)' increment-value='%null%' refresh-type='create' rows-inserted='6' timestamp-start='2024-01-17 16:59:59.475' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.481429' measure-ordering='alphabetic' measure-percentage='0.518571' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:continent:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#cf4244'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#e56249'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#f6834b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f9aa51'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ghana&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Sheet1 (Tableau 4)' inline='true' name='federated.1rgcjw21aiu6qi11cyoh60aem350' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau 4' name='excel-direct.1wh6rj00u9oegr1ejdj0w16ku1vm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Dell/Documents/Spreadsheets/Tableau 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1wh6rj00u9oegr1ejdj0w16ku1vm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PopulationInfectedPercentage' ordinal='4' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PopulationInfectedPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PopulationInfectedPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PopulationInfectedPercentage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Dell/Documents/My Tableau Repository/Datasources/Sheet1 (Tableau 4).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='01/17/2024 05:00:11 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Sheet1 (Tableau 4)' increment-value='%null%' refresh-type='create' rows-inserted='276027' timestamp-start='2024-01-17 17:00:11.492' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>421</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>421</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>7529</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46174</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PopulationInfectedPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PopulationInfectedPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PopulationInfectedPercentage</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46174</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.425714' measure-ordering='alphabetic' measure-percentage='0.574286' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ghana&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GLOBAL FIGURES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau 1)' name='federated.0t6pgvh0m6wwq9121ww38173bvb6' />
          </datasources>
          <datasource-dependencies datasource='federated.0t6pgvh0m6wwq9121ww38173bvb6'>
            <column datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total_Cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total_Deaths]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_Cases]' derivation='Sum' name='[sum:Total_Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_Deaths]' derivation='Sum' name='[sum:Total_Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0t6pgvh0m6wwq9121ww38173bvb6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0t6pgvh0m6wwq9121ww38173bvb6].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0t6pgvh0m6wwq9121ww38173bvb6].[sum:Total_Cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0t6pgvh0m6wwq9121ww38173bvb6].[sum:Total_Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0t6pgvh0m6wwq9121ww38173bvb6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0t6pgvh0m6wwq9121ww38173bvb6].[sum:Total_Cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0t6pgvh0m6wwq9121ww38173bvb6].[sum:Total_Deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0t6pgvh0m6wwq9121ww38173bvb6].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0t6pgvh0m6wwq9121ww38173bvb6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0t6pgvh0m6wwq9121ww38173bvb6].[:Measure Names]' value='166' />
            <format attr='height' value='66' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
            <format attr='text-format' field='[federated.0t6pgvh0m6wwq9121ww38173bvb6].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='border-color' value='#ffbe7d' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' scope='cols' value='normal' />
            <format attr='font-weight' data-class='total' scope='cols' value='normal' />
            <format attr='background-color' scope='cols' value='#faf5f0' />
            <format attr='border-color' data-class='subtotal' value='#ffbe7d' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='10' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f5eddc' />
            <format attr='border-color' data-class='subtotal' value='#ffbe7d' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='2' />
            <format attr='stroke-color' scope='cols' value='#ffbe7d' />
            <format attr='stroke-color' scope='rows' value='#ffbe7d' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffbe7d' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0t6pgvh0m6wwq9121ww38173bvb6].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0t6pgvh0m6wwq9121ww38173bvb6].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{6DBAE857-0AE0-45F2-8D6B-E33E429C110C}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>TOTAL DEATH COUNT PER CONTINENT</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau 2)' name='federated.0wep7o20jrs9nb10brb8i1i1frlp' />
          </datasources>
          <datasource-dependencies datasource='federated.0wep7o20jrs9nb10brb8i1i1frlp'>
            <column datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0wep7o20jrs9nb10brb8i1i1frlp].[none:continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0wep7o20jrs9nb10brb8i1i1frlp].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='has-stroke' value='true' />
                <format attr='size' value='1.3843094110488892' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wep7o20jrs9nb10brb8i1i1frlp].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0wep7o20jrs9nb10brb8i1i1frlp].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{A78617DE-C07B-49EB-988D-6205ACDED8FA}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>POPULATION PERCENTAGE INFECTED BY COUNTRY</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau 3)' name='federated.0pr91at1w7vc471c66sf90zwejom' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0pr91at1w7vc471c66sf90zwejom'>
            <column datatype='real' name='[PopulationInfectedPercentage]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PopulationInfectedPercentage]' derivation='Sum' name='[sum:PopulationInfectedPercentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0pr91at1w7vc471c66sf90zwejom].[Longitude (generated)]' field-type='quantitative' max='7740428.3860004861' min='-3101273.7696707644' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0pr91at1w7vc471c66sf90zwejom].[Latitude (generated)]' field-type='quantitative' max='5429084.1996664861' min='-5914674.6473759552' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pr91at1w7vc471c66sf90zwejom].[sum:PopulationInfectedPercentage:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0pr91at1w7vc471c66sf90zwejom].[sum:PopulationInfectedPercentage:qk]' value='PopulationInfectedPercentage'>
              <formatted-text>
                <run>PopulationInfectedPercentage</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0pr91at1w7vc471c66sf90zwejom].[none:location:nk]' />
              <color column='[federated.0pr91at1w7vc471c66sf90zwejom].[sum:PopulationInfectedPercentage:qk]' />
              <geometry column='[federated.0pr91at1w7vc471c66sf90zwejom].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pr91at1w7vc471c66sf90zwejom].[Latitude (generated)]</rows>
        <cols>[federated.0pr91at1w7vc471c66sf90zwejom].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{70714180-D7C5-4572-838E-1BEE3788E1F8}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>PERCENT OF POPULATION INFECTED</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau 4)' name='federated.1rgcjw21aiu6qi11cyoh60aem350' />
          </datasources>
          <datasource-dependencies datasource='federated.1rgcjw21aiu6qi11cyoh60aem350'>
            <column datatype='real' name='[PopulationInfectedPercentage]' role='measure' type='quantitative' />
            <column-instance column='[PopulationInfectedPercentage]' derivation='Avg' name='[avg:PopulationInfectedPercentage:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rgcjw21aiu6qi11cyoh60aem350].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Togo&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rgcjw21aiu6qi11cyoh60aem350].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1rgcjw21aiu6qi11cyoh60aem350].[tmn:date:qk]' scope='cols' value='DATE' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1rgcjw21aiu6qi11cyoh60aem350].[avg:PopulationInfectedPercentage:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rgcjw21aiu6qi11cyoh60aem350].[none:location:nk]' />
              <text column='[federated.1rgcjw21aiu6qi11cyoh60aem350].[none:location:nk]' />
              <text column='[federated.1rgcjw21aiu6qi11cyoh60aem350].[avg:PopulationInfectedPercentage:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rgcjw21aiu6qi11cyoh60aem350].[avg:PopulationInfectedPercentage:qk]</rows>
        <cols>[federated.1rgcjw21aiu6qi11cyoh60aem350].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{1D3C1042-4807-45FA-AD2E-A3E613ED1C01}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98244' id='9' param='horz' type='layout-flow' w='99034' x='483' y='878'>
            <zone h='98244' id='7' type='layout-basic' w='99034' x='483' y='878'>
              <zone h='20198' id='3' name='Sheet 1' w='44780' x='483' y='878'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28869' id='5' name='Sheet 2' w='44780' x='483' y='21076'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98244' id='6' name='Sheet 3' w='46047' x='45263' y='878'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49177' id='11' name='Sheet 4' w='35425' x='483' y='49945'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='749' h='49177' id='12' is-fixed='true' name='Sheet 4' pane-specification-id='0' param='[federated.1rgcjw21aiu6qi11cyoh60aem350].[none:location:nk]' type='color' w='9355' x='35908' y='49945'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98244' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.0pr91at1w7vc471c66sf90zwejom].[sum:PopulationInfectedPercentage:qk]' type='color' w='8207' x='91310' y='878'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98244' id='25' param='vert' type='layout-flow' w='99034' x='483' y='878'>
                <zone fixed-size='154' h='20198' id='3' is-fixed='true' name='Sheet 1' w='44780' x='483' y='878'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98244' id='6' is-fixed='true' name='Sheet 3' w='46047' x='45263' y='878'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='98244' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.0pr91at1w7vc471c66sf90zwejom].[sum:PopulationInfectedPercentage:qk]' type='color' w='8207' x='91310' y='878'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='223' h='28869' id='5' is-fixed='true' name='Sheet 2' w='44780' x='483' y='21076'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49177' id='11' is-fixed='true' name='Sheet 4' w='35425' x='483' y='49945'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='749' h='49177' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.1rgcjw21aiu6qi11cyoh60aem350].[none:location:nk]' type='color' w='9355' x='35908' y='49945'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8E9603D8-9627-4B8F-9CD8-316E97E0672E}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0t6pgvh0m6wwq9121ww38173bvb6].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C76C30B-B79D-4AA4-B55D-DEB4FC917E03}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wep7o20jrs9nb10brb8i1i1frlp].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wep7o20jrs9nb10brb8i1i1frlp].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BBEFCAB7-B7E5-4163-B090-844A1F1C5453}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pr91at1w7vc471c66sf90zwejom].[sum:PopulationInfectedPercentage:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pr91at1w7vc471c66sf90zwejom].[none:location:nk]</field>
            <field>[federated.0pr91at1w7vc471c66sf90zwejom].[sum:PopulationInfectedPercentage:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{33F72170-3D77-413F-BF76-D49D3C436251}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1rgcjw21aiu6qi11cyoh60aem350].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1rgcjw21aiu6qi11cyoh60aem350].[avg:PopulationInfectedPercentage:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1rgcjw21aiu6qi11cyoh60aem350].[avg:PopulationInfectedPercentage:qk]</field>
            <field>[federated.1rgcjw21aiu6qi11cyoh60aem350].[none:location:nk]</field>
            <field>[federated.1rgcjw21aiu6qi11cyoh60aem350].[qr:date:ok]</field>
            <field>[federated.1rgcjw21aiu6qi11cyoh60aem350].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E26124D1-0B6D-4B87-B7C1-234DDF1276EA}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1rgcjw21aiu6qi11cyoh60aem350].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DFB43D5F-ABC1-40F1-A5D2-54C3D7338544}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='90' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAUdUlEQVR4nO3daXAb93nH8e8ubt73LR6iLkqmJMqUqIOSJct2nKtJG9dpnaZJpnXSOpPk
      TTuT6XR6TN51MtNXbadNMk1z2G6cxo5z1JNahyVR90VJtChS5k0CBAmQAAGCuHb7gjJtWpaA
      hAtK5D6fV8Byuf8HEn7cA/99oOi6riOECSmKoqgPugghHiQJgDA1CYAwNQmAMDUJwENKS8S4
      evoIP33tV0yG4vddV08miMWTAPSNjf12A+ka0Vgcs14KsT7oAsSHu/ybH9Of1canP1JFMK4x
      G/Qx7PZRWduAUwvjD8eYmZ6mrKYez7mf8OMuG19+9iNEkxrR8BTT4TjB6QBlNXXk2nUG+gew
      55VSWZLD+PgkiWgYW145rkA33/qvk3zli3/MuoYq0/1FNNvrXTEuXx6hvX0zNlcB+dYwL774
      E6YCk/zgP1+iv+sk33/1Lcb7r/DKG2dJJpNoyQSJpMZQKMTIjeP86NUOPP0X+dn/XuT0r/+H
      294gb776Cn3jw/zrv3yPQMjHf3z3ZbRkEk3TSCQSmHEnIAF4SNntEItpAISDQ0QsNbTt3ENB
      fIDxGSivXUfThrVEwmGqKqsprW6gvrII5c7vV9Q20rSpnkgwxIVzpxkb7sOalYeKQnZxJc3N
      j0BshqLSCgpLK9m0rhbLg3u5D4wE4CH12OFdvPHqL7l88Qy+WCmu5AjnL5xhylJHee7idW0F
      JcyN9jLg9n/oX/HtzU1YcirY0rQOh/UD/+XOHFxzPm7eHiKZsVfz8FLkk+CHk65r+NwjTIbi
      1DU0oEemGB6bpKJ2LS49TDBhp8Cp4w8lKC3MwT08gJ5VTE6OE6cWIZRwkO/U8M9olBQ4GOjr
      R7fnsqa6BJ9/hsryQsbGJqmqKmPaO8ZkRGFtnbnOARRFUR76AOi6jqIoqVcU4re0IqZCJBKJ
      B12CWMUe+gAIkUkSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBh
      aivulkg9EYal3rukqCiWLEPqESvbigvAbPc3QYstaRuKo5Ksjf9gTEFiRZNDIGFqEgBhahIA
      YWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWqGfRI86xvh7NVbJJMJqjfuoDY7QsfFmyQVJ4ee
      OMB0/3Wu9Y9jzyqmfU8L/Vc7GPDNklfeSOuGUm4NTbJ5fS3nO86wdU87Los0wxKZZ1gA7Pnl
      HHq8mviMm/M9fuKjXnY/8RQOXxedPW503xyHDj+B+9YlxrxuPLN5PPXkPs6d7iCaKCIajzPQ
      eY6CdS3y5hfLxrAAWK02AuODdPaM8UjLDnqvT5FjVVAKi6B/Ct2RhU1VcGXnMjMzhTWnAFDI
      sTmI6TqjvVfps1XwzPYcYL4jnK7rJJNJFnVvNKCRo67rxGJLm08kVgfDAhCdHqFzIEjbnl04
      rBayiBOIajgmJ1CLK9DH+4kmNUIzAWyldSQ8Y2h6DcFYlAZFoXr9dsqVaS6/46WlsQyr9b3S
      bDbbwuO4wtIngyoKdrt9aRsRq4JhJ8HuwWFCwXE6TrzFjXfcNG5q5PKJI3TcCrO1sZzGmnxO
      HjvKaNhFVWk5NQUxjhw5gr1oDQ6rlSynk6qmXdin3yEQMWOjbvEgPPTdoePx+KI9QPjG12Q6
      tDDEiugOLUQmSQCEqUkAhKlJAISpSQCEqUkAhKlJAISpSQCEqUkAhKlJAISpSQCEqUkAhKlJ
      AISpSQCEqUkAhKlJAISpSQCEqUkAhKlJAISpSQCEqUkAhKkZFgBdSzDQfZWLXX0AzEwOc+LY
      UY6fOksophEYH+T4sWNcuvEOSR3cfV0cPXqMmwPjJGNh+ofH0HWN7mtXiSQf6kYVYhUxLADR
      0DQx1UUkPAXA7Ru32bz3ADvr7HT2eenuGaF1336yYh48U356Bmc4cGAfk0M9xGMxpoIz+Pqu
      M+MsxymtEcUyMawznDOvhAarjcnAbQDWNJRx/thRSCTZ9dg6emfyybZbKSopJuTzYCuswmq1
      U+RyEtF1Rns7GXCU8/tPb0NBWiOK5ZGx7wl+Z8jLvscOoc7cpqt3HGJzJHSd2FwENbuY5EQI
      0JmNx7ChUL2+GWfIS99EiMayHGmNKJaFYQGY9vRz+Vo3A+4JHFmFFObYOX/6JEpijtrmduz+
      KY6+eQTFmsX+/TUEB47xf2+OYsurwmFRAJWm1t10nOygOPcxClwWo0oT4p4Ma414/80s/rOt
      KMqHrq8o8O5iRZk/D5DWiCJTFEVRDNsDvPuGvc8aaa2fcjNCGEg+BxCmJgEQpiYBEKYmARCm
      JgEQpiYBEKYmARCmJgEQpiYBEKYmARCmJgEQpiYBEKYmARCmJgEQpiYBEKYmARCmJgEQppax
      m+JXMl3XQNeWviHFksadcuJBkgB8iOS1H6L1/HzJ27Ee/BZK6RYDKhKZIodAwtSMa42o64T8
      bnoHPfPPtQR9b1/hxKnzzCYgPjvF2VMnuT3qQ9ch7B/l5IlTuKfCaPE5PJN+dF1nbLBPWiOK
      ZWNca8SAl+s3+xhxjwLg7u0k5Kph787NKMkEVy92sr5lJ8GBa0yEwly41EPrrhbevnqZeGyO
      sfEJZif6uT0Rl9aIYtkY1xqxoJzWFicXuuZbIw70jxDLneVYb5TmnTtIOIspzHYSr6kg5B3G
      XtyAy5lNWbaDiKbhHerBM5LL4ScPLrRGBNA0jXg8/t5ARuwcdBZv84M/1gw4AQaSySTJe40T
      8qP9/NtLH6R+G+q+zy59OyaVsZNgmz2Hpl37yE1OcO7SAKqqous6WiIBVidaPA7oJLQkKlBY
      Xk1iyk8omsDhsmKxzHeG03V94bFhFO67TU1VMCICqmpBucc4up4kMXJz6WPklRr/72MihgVg
      bmaK4ZERJrxeRsf91DWU0HnxGmWuMHmVm7D4bnLj5i0CXj/b9+zD23ecm7fi+BM2HrGo2BzZ
      7Gpv5GjHWfbu34vL9t7Rmaq+70jNgN6gd23zAzSMOQRTlHuPoxl0efR+Y4jUjNsDKAo2Vy7b
      tjShKAql9c1szfYwq9mprihGr92J2z1OXW0beQ4rrXt3MzY+xe6dG7DaYONaJ4rDwd5dzQa9
      /YRIzbhzgJwC6nMKFi0rKqui6M5jxeqgek3tewM7cqitzVl4nu2aL8WVk29USUKkJPtOYWoS
      AGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBh
      ahIAYWoSAGFqEgBhahIAYWoSAGFqhgYgPjfDhD+48FxPROkbGgNAi0fo6+1hIjALQCwSoKen
      l5lIHD0ZJxgKg64T9PuIadIaUSwPwwIwFxjn9OlzXO3uvbNEZ6j3BsfOXAI0ui5dIGZxcOvK
      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
      av8PDKa2goRs1PIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
